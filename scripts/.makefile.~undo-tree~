(undo-tree-save-format-version . 1)
"ccbed2bfe65f8e809988513304c65a9beaa0790c"
[nil nil nil nil (25912 56481 609943 238000) 1 nil]
([nil nil ((apply -34 1 690 undo--wrap-and-run-primitive-undo 1 690 ((671 . 673) (658 . 660) (649 . 651) (590 . 592) (542 . 544) (477 . 479) (454 . 456) (394 . 396) (330 . 332) (262 . 264) (227 . 229) (199 . 201) (138 . 140) (89 . 91) (72 . 74) (27 . 29) (1 . 3)))) ((apply 34 1 656 undo--wrap-and-run-primitive-undo 1 656 ((#("# " 0 2 (fontified t face font-lock-comment-delimiter-face)) . 1) (#<marker at 1 in makefile> . -2) (#("# " 0 2 (fontified t face font-lock-comment-delimiter-face)) . 27) (#("# " 0 2 (fontified t face font-lock-comment-delimiter-face)) . 72) (#("# " 0 2 (fontified t face font-lock-comment-delimiter-face)) . 89) (#("# " 0 2 (fontified t face font-lock-comment-delimiter-face)) . 138) (#("# " 0 2 (fontified t face font-lock-comment-delimiter-face)) . 199) (#("# " 0 2 (fontified t face font-lock-comment-delimiter-face)) . 227) (#("# " 0 2 (fontified t face font-lock-comment-delimiter-face)) . 262) (#("# " 0 2 (fontified t face font-lock-comment-delimiter-face)) . 330) (#("# " 0 2 (fontified t face font-lock-comment-delimiter-face)) . 394) (#("# " 0 2 (fontified t face font-lock-comment-delimiter-face)) . 454) (#("# " 0 2 (fontified t face font-lock-comment-delimiter-face)) . 477) (#("# " 0 2 (fontified t face font-lock-comment-delimiter-face)) . 542) (#("# " 0 2 (fontified t face font-lock-comment-delimiter-face)) . 590) (#("# " 0 2 (fontified t face font-lock-comment-delimiter-face)) . 649) (#("# " 0 2 (fontified t face font-lock-comment-delimiter-face)) . 658) (#("# " 0 2 (fontified t face font-lock-comment-delimiter-face)) . 671)))) (25912 56481 38975 843000) 0 nil] [nil nil ((82 . 99)) ((#("##FpAdder section" 0 1 (fontified t face font-lock-comment-delimiter-face) 1 2 (fontified t syntax-table (3) face font-lock-comment-delimiter-face) 2 17 (fontified t face font-lock-comment-face)) . 82) (undo-tree-id212 . -17) (undo-tree-id213 . -17)) (25912 56482 911968 413000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1345 . 1346) (nil fontified nil 691 . 1346) (691 . 1346) (t 25912 56417 896890 943000)) ((#("PRAC=../prototype/FpAdd
LINES:=$(shell python3 ${PRAC}/linelength)
TEST=../test


FpAdd.out: ${PRAC}/FpAdd.v ${PRAC}/FpAdd_tb.v 
	iverilog ${PRAC}/FpAdd.v ${PRAC}/FpAdd_tb.v -o FpAdd.out

FpAdd_rtl.temp: FpAdd.out
	vvp FpAdd.out > FpAdd_rtl.temp

FpAdd_rtl.out: ${TEST}/Fp_Add_tstvec.txt FpAdd.out FpAdd_rtl.temp
	tail -n +4 FpAdd_rtl.temp| head -n ${LINES} > FpAdd_rtl.out

FpAdd_ref.out: ${PRAC}/py_FpAdd ${TEST}/Fp_Add_tstvec.txt
	./${PRAC}/py_FpAdd

FpAdd.log: ./FpAdd_rtl.out ./FpAdd_ref.out ../scripts/makefile
	#cmp FpAdd_rtl.out FpAdd_ref.out > FpAdd.log
	diff -s FpAdd_rtl.out FpAdd_ref.out | tee -i FpAdd.log 
clean:
	rm -f ./*
	touch .gitignore" 0 4 (fontified nil face font-lock-variable-name-face) 4 24 (fontified nil) 24 29 (fontified nil face font-lock-variable-name-face) 29 33 (fontified nil) 33 38 (fontified nil face (font-lock-function-name-face font-lock-variable-name-face)) 38 39 (fontified nil face (font-lock-function-name-face)) 39 49 (fontified nil face (makefile-shell)) 49 53 (fontified nil face (makefile-shell font-lock-variable-name-face)) 53 65 (fontified nil face (makefile-shell)) 65 67 (fontified nil) 67 71 (fontified nil face font-lock-variable-name-face) 71 80 (fontified nil) 80 82 (fontified nil) 82 91 (fontified nil face (makefile-targets)) 91 95 (fontified nil) 95 99 (fontified nil face (font-lock-variable-name-face)) 99 111 (fontified nil) 111 115 (fontified nil face (font-lock-variable-name-face)) 115 129 (fontified nil) 129 130 (fontified nil) 130 141 (fontified nil) 141 145 (fontified nil face (font-lock-variable-name-face)) 145 157 (fontified nil) 157 161 (fontified nil face (font-lock-variable-name-face)) 161 187 (fontified nil) 187 188 (fontified nil) 188 202 (fontified nil face (makefile-targets)) 202 214 (fontified nil) 214 215 (fontified nil) 215 246 (fontified nil) 246 247 (fontified nil) 247 260 (fontified nil face (makefile-targets)) 260 264 (fontified nil) 264 268 (fontified nil face (font-lock-variable-name-face)) 268 313 (fontified nil) 313 314 (fontified nil) 314 351 (fontified nil) 351 356 (fontified nil face (font-lock-variable-name-face)) 356 374 (fontified nil) 374 375 (fontified nil) 375 388 (fontified nil face (makefile-targets)) 388 392 (fontified nil) 392 396 (fontified nil face (font-lock-variable-name-face)) 396 409 (fontified nil) 409 413 (fontified nil face (font-lock-variable-name-face)) 413 433 (fontified nil) 433 434 (fontified nil) 434 438 (fontified nil) 438 442 (fontified nil face (font-lock-variable-name-face)) 442 453 (fontified nil) 453 454 (fontified nil) 454 463 (fontified nil face (makefile-targets)) 463 476 (fontified nil) 476 500 (fontified nil) 500 502 (fontified nil) 502 517 (fontified nil) 517 518 (fontified nil face makefile-space) 518 519 (fontified nil face makefile-space) 519 563 (fontified nil face font-lock-comment-face) 563 564 (fontified nil) 564 620 (fontified nil) 620 625 (fontified nil face (makefile-targets)) 625 627 (fontified nil) 627 628 (fontified nil) 628 638 (fontified nil) 638 639 (fontified nil) 639 654 (fontified nil) 654 655 (rear-nonsticky nil fontified nil)) . 691) (undo-tree-id289 . -24) (undo-tree-id290 . -655) (undo-tree-id291 . -313) (undo-tree-id292 . -655) (undo-tree-id293 . -655) (undo-tree-id294 . -627) (undo-tree-id295 . -627) (undo-tree-id296 . -620) (undo-tree-id297 . -620) (undo-tree-id298 . -563) (undo-tree-id299 . -563) (undo-tree-id300 . -313) (undo-tree-id301 . -313) (undo-tree-id302 . -374) (undo-tree-id303 . -374) (undo-tree-id304 . -375) (undo-tree-id305 . -375) (undo-tree-id306 . -433) (undo-tree-id307 . -433) (undo-tree-id308 . -453) (undo-tree-id309 . -453) (undo-tree-id310 . -454) (undo-tree-id311 . -454) (undo-tree-id312 . -517) (undo-tree-id313 . -517) (undo-tree-id314 . -638) (undo-tree-id315 . -638) (undo-tree-id316 . -82) (undo-tree-id317 . -93) (undo-tree-id318 . -82) (undo-tree-id319 . -91) (undo-tree-id320 . -91) (undo-tree-id321 . -92) (undo-tree-id322 . -188) (undo-tree-id323 . -204) (undo-tree-id324 . -188) (undo-tree-id325 . -202) (undo-tree-id326 . -202) (undo-tree-id327 . -203) (undo-tree-id328 . -247) (undo-tree-id329 . -262) (undo-tree-id330 . -247) (undo-tree-id331 . -260) (undo-tree-id332 . -260) (undo-tree-id333 . -261) (undo-tree-id334 . -375) (undo-tree-id335 . -390) (undo-tree-id336 . -375) (undo-tree-id337 . -388) (undo-tree-id338 . -388) (undo-tree-id339 . -389) (undo-tree-id340 . -454) (undo-tree-id341 . -465) (undo-tree-id342 . -454) (undo-tree-id343 . -463) (undo-tree-id344 . -463) (undo-tree-id345 . -464) (undo-tree-id346 . -620) (undo-tree-id347 . -626) (undo-tree-id348 . -620) (undo-tree-id349 . -625) (undo-tree-id350 . -625) (undo-tree-id351 . -626) (nil fontified t 1319 . 1329) (nil fontified t 1318 . 1319) (nil fontified t 1316 . 1318) (nil fontified t 1311 . 1316) (nil fontified t 1255 . 1311) (nil fontified t 1254 . 1255) (nil fontified t 1210 . 1254) (nil fontified t 1209 . 1210) (nil fontified t 1208 . 1209) (nil fontified t 1193 . 1208) (nil fontified t 1191 . 1193) (nil fontified t 1167 . 1191) (nil fontified t 1154 . 1167) (nil fontified t 1145 . 1154) (nil fontified t 1144 . 1145) (nil fontified t 1133 . 1144) (nil fontified t 1129 . 1133) (nil fontified t 1125 . 1129) (nil fontified t 1124 . 1125) (nil fontified t 1104 . 1124) (nil fontified t 1100 . 1104) (nil fontified t 1087 . 1100) (nil fontified t 1083 . 1087) (nil fontified t 1079 . 1083) (nil fontified t 1066 . 1079) (nil fontified t 1065 . 1066) (nil fontified t 1047 . 1065) (nil fontified t 1042 . 1047) (nil fontified t 1005 . 1042) (nil fontified t 1004 . 1005) (nil fontified t 959 . 1004) (nil fontified t 955 . 959) (nil fontified t 951 . 955) (nil fontified t 938 . 951) (nil fontified t 937 . 938) (nil fontified t 906 . 937) (nil fontified t 905 . 906) (nil fontified t 893 . 905) (nil fontified t 879 . 893) (nil fontified t 878 . 879) (nil fontified t 852 . 878) (nil fontified t 848 . 852) (nil fontified t 836 . 848) (nil fontified t 832 . 836) (nil fontified t 821 . 832) (nil fontified t 820 . 821) (nil fontified t 806 . 820) (nil fontified t 802 . 806) (nil fontified t 790 . 802) (nil fontified t 786 . 790) (nil fontified t 782 . 786) (nil fontified t 773 . 782) (nil fontified t 771 . 773) (nil fontified t 762 . 771) (nil fontified t 758 . 762) (nil fontified t 756 . 758) (nil fontified t 744 . 756) (nil fontified t 740 . 744) (nil fontified t 730 . 740) (nil fontified t 729 . 730) (nil fontified t 724 . 729) (nil fontified t 720 . 724) (nil fontified t 715 . 720) (nil fontified t 695 . 715) (nil fontified t 691 . 695) (nil rear-nonsticky t 1345 . 1346)) (25912 56479 949834 49000) 0 nil])
([nil nil ((99 . 100)) ((#("
" 0 1 (fontified t face font-lock-comment-face)) . 99)) (25912 56484 841016 979000) 0 nil])
([nil nil ((1346 . 1347)) ((#("
" 0 1 (face font-lock-comment-face fontified nil)) . 1346) (undo-tree-id288 . -1)) (25912 56479 572143 502000) 0 nil])
([nil nil ((81 . 82)) ((#("#" 0 1 (fontified t face font-lock-comment-delimiter-face)) . 81) (undo-tree-id210 . -1) (undo-tree-id211 . -1)) (25912 56485 272527 722000) 0 nil])
([nil nil ((apply -34 691 1381 undo--wrap-and-run-primitive-undo 691 1381 ((1361 . 1363) (1348 . 1350) (1339 . 1341) (1280 . 1282) (1232 . 1234) (1167 . 1169) (1144 . 1146) (1084 . 1086) (1020 . 1022) (952 . 954) (917 . 919) (889 . 891) (828 . 830) (779 . 781) (762 . 764) (717 . 719) (691 . 693))) (t 25912 56421 312920 106000)) ((apply 34 691 1347 undo--wrap-and-run-primitive-undo 691 1347 ((#("# " 0 2 (face font-lock-comment-delimiter-face)) . 691) (#("# " 0 2 (face font-lock-comment-delimiter-face)) . 717) (#("# " 0 2 (face font-lock-comment-delimiter-face)) . 762) (#("# " 0 2 (face font-lock-comment-delimiter-face)) . 779) (#("# " 0 2 (face font-lock-comment-delimiter-face)) . 828) (#("# " 0 2 (face font-lock-comment-delimiter-face)) . 889) (#("# " 0 2 (face font-lock-comment-delimiter-face)) . 917) (#("# " 0 2 (face font-lock-comment-delimiter-face)) . 952) (#("# " 0 2 (face font-lock-comment-delimiter-face)) . 1020) (#("# " 0 2 (face font-lock-comment-delimiter-face)) . 1084) (#("# " 0 2 (face font-lock-comment-delimiter-face)) . 1144) (#("# " 0 2 (face font-lock-comment-delimiter-face)) . 1167) (#("# " 0 2 (face font-lock-comment-delimiter-face)) . 1232) (#("# " 0 2 (face font-lock-comment-delimiter-face)) . 1280) (#("# " 0 2 (face font-lock-comment-delimiter-face)) . 1339) (#("# " 0 2 (face font-lock-comment-delimiter-face)) . 1348) (#("# " 0 2 (face font-lock-comment-delimiter-face)) . 1361)))) (25912 56478 715312 308000) 0 nil])
([nil nil ((82 . 150)) ((#("--------------------------------------------------------------------" 0 68 (fontified t face font-lock-comment-face)) . 82)) (25912 56485 515045 942000) 0 nil])
([nil nil ((apply 34 1 656 undo--wrap-and-run-primitive-undo 1 656 ((#("# " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -639) (#("# " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -628) (#("# " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -621) (#("# " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -564) (#("# " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -518) (#("# " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -455) (#("# " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -434) (#("# " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -376) (#("# " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -314) (#("# " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -248) (#("# " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -215) (#("# " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -189) (#("# " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -130) (#("# " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -83) (#("# " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -68) (#("# " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -25) (#("# " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -1))) (t 25912 56450 553240 8000)) ((apply -34 1 690 undo--wrap-and-run-primitive-undo 1 690 ((1 . 3) (25 . 27) (68 . 70) (83 . 85) (130 . 132) (189 . 191) (215 . 217) (248 . 250) (314 . 316) (376 . 378) (434 . 436) (455 . 457) (518 . 520) (564 . 566) (621 . 623) (628 . 630) (639 . 641)))) (25912 56478 531887 181000) 0 nil])
([nil nil ((#("#" 0 1 (fontified t face font-lock-comment-delimiter-face syntax-table (3))) . 152)) ((152 . 153)) (25912 56485 662088 109000) 0 nil])
([nil nil ((#("# PRAC=../prototype/FpAdd
# LINES:=$(shell python3 ${PRAC}/linelength)
# TEST=../test


# FpAdd.out: ${PRAC}/FpAdd.v ${PRAC}/FpAdd_tb.v 
# 	iverilog ${PRAC}/FpAdd.v ${PRAC}/FpAdd_tb.v -o FpAdd.out

# FpAdd_rtl.temp: FpAdd.out
# 	vvp FpAdd.out > FpAdd_rtl.temp

# FpAdd_rtl.out: ${TEST}/Fp_Add_tstvec.txt FpAdd.out FpAdd_rtl.temp
# 	tail -n +4 FpAdd_rtl.temp| head -n ${LINES} > FpAdd_rtl.out

# FpAdd_ref.out: ${PRAC}/py_FpAdd ${TEST}/Fp_Add_tstvec.txt
# 	./${PRAC}/py_FpAdd

# FpAdd.log: ./FpAdd_rtl.out ./FpAdd_ref.out ../scripts/makefile
# 	#cmp FpAdd_rtl.out FpAdd_ref.out > FpAdd.log
# 	diff -s FpAdd_rtl.out FpAdd_ref.out | tee -i FpAdd.log 
# clean:
# 	rm -f ./*
# 	touch .gitignore
" 0 2 (fontified t face font-lock-comment-delimiter-face) 2 6 (fontified t face font-lock-comment-face) 6 26 (fontified t face font-lock-comment-face) 26 28 (fontified t face font-lock-comment-delimiter-face) 28 33 (fontified t face font-lock-comment-face) 33 37 (fontified t face font-lock-comment-face) 37 42 (fontified t face (font-lock-function-name-face font-lock-variable-name-face font-lock-comment-face)) 42 43 (fontified t face (font-lock-function-name-face font-lock-comment-face)) 43 53 (fontified t face (makefile-shell font-lock-comment-face)) 53 57 (fontified t face (makefile-shell font-lock-variable-name-face font-lock-comment-face)) 57 69 (fontified t face (makefile-shell font-lock-comment-face)) 69 71 (fontified t face font-lock-comment-face) 71 73 (fontified t face font-lock-comment-delimiter-face) 73 77 (fontified t face font-lock-comment-face) 77 86 (fontified t face font-lock-comment-face) 86 88 (fontified t) 88 90 (fontified t face font-lock-comment-delimiter-face) 90 99 (fontified t face font-lock-comment-face) 99 103 (fontified t face font-lock-comment-face) 103 107 (fontified t face (font-lock-variable-name-face font-lock-comment-face)) 107 119 (fontified t face font-lock-comment-face) 119 123 (fontified t face (font-lock-variable-name-face font-lock-comment-face)) 123 137 (fontified t face font-lock-comment-face) 137 139 (fontified t face font-lock-comment-delimiter-face) 139 140 (fontified t face font-lock-comment-delimiter-face) 140 151 (fontified t face font-lock-comment-face) 151 155 (fontified t face (font-lock-variable-name-face font-lock-comment-face)) 155 167 (fontified t face font-lock-comment-face) 167 171 (fontified t face (font-lock-variable-name-face font-lock-comment-face)) 171 197 (fontified t face font-lock-comment-face) 197 198 (fontified t) 198 200 (fontified t face font-lock-comment-delimiter-face) 200 214 (fontified t face font-lock-comment-face) 214 226 (fontified t face font-lock-comment-face) 226 228 (fontified t face font-lock-comment-delimiter-face) 228 229 (fontified t face font-lock-comment-delimiter-face) 229 260 (fontified t face font-lock-comment-face) 260 261 (fontified t) 261 263 (fontified t face font-lock-comment-delimiter-face) 263 276 (fontified t face font-lock-comment-face) 276 280 (fontified t face font-lock-comment-face) 280 284 (fontified t face (font-lock-variable-name-face font-lock-comment-face)) 284 329 (fontified t face font-lock-comment-face) 329 331 (fontified t face font-lock-comment-delimiter-face) 331 332 (fontified t face font-lock-comment-delimiter-face) 332 369 (fontified t face font-lock-comment-face) 369 374 (fontified t face (font-lock-variable-name-face font-lock-comment-face)) 374 392 (fontified t face font-lock-comment-face) 392 393 (fontified t) 393 395 (fontified t face font-lock-comment-delimiter-face) 395 408 (fontified t face font-lock-comment-face) 408 412 (fontified t face font-lock-comment-face) 412 416 (fontified t face (font-lock-variable-name-face font-lock-comment-face)) 416 429 (fontified t face font-lock-comment-face) 429 433 (fontified t face (font-lock-variable-name-face font-lock-comment-face)) 433 453 (fontified t face font-lock-comment-face) 453 455 (fontified t face font-lock-comment-delimiter-face) 455 456 (fontified t face font-lock-comment-delimiter-face) 456 460 (fontified t face font-lock-comment-face) 460 464 (fontified t face (font-lock-variable-name-face font-lock-comment-face)) 464 475 (fontified t face font-lock-comment-face) 475 476 (fontified t) 476 478 (fontified t face font-lock-comment-delimiter-face) 478 487 (fontified t face font-lock-comment-face) 487 500 (fontified t face font-lock-comment-face) 500 524 (face font-lock-comment-face fontified t) 524 526 (face font-lock-comment-face fontified t) 526 541 (face font-lock-comment-face fontified t) 541 543 (fontified t face font-lock-comment-delimiter-face) 543 544 (fontified t face font-lock-comment-delimiter-face) 544 545 (fontified t face font-lock-comment-face) 545 589 (fontified t face font-lock-comment-face) 589 591 (fontified t face font-lock-comment-delimiter-face) 591 592 (fontified t face font-lock-comment-delimiter-face) 592 648 (fontified t face font-lock-comment-face) 648 650 (fontified t face font-lock-comment-delimiter-face) 650 655 (fontified t face font-lock-comment-face) 655 657 (fontified t face font-lock-comment-face) 657 659 (fontified t face font-lock-comment-delimiter-face) 659 660 (fontified t face font-lock-comment-delimiter-face) 660 670 (fontified t face font-lock-comment-face) 670 672 (fontified t face font-lock-comment-delimiter-face) 672 673 (fontified t face font-lock-comment-delimiter-face) 673 688 (fontified t face font-lock-comment-face) 688 689 (rear-nonsticky t fontified t face font-lock-comment-face) 689 690 (fontified t face font-lock-comment-face)) . -657) (undo-tree-id234 . -26) (undo-tree-id235 . -690) (undo-tree-id236 . -86) (undo-tree-id237 . -690) (undo-tree-id239 . -690) (undo-tree-id241 . -690) (undo-tree-id243 . -690) (undo-tree-id245 . -690) (undo-tree-id247 . -86) (undo-tree-id249 . -87) (undo-tree-id251 . -88) (undo-tree-id253 . -137) (undo-tree-id255 . -197) (undo-tree-id257 . -198) (undo-tree-id259 . -226) (undo-tree-id261 . -260) (undo-tree-id263 . -261) (undo-tree-id265 . -329) (undo-tree-id267 . -392) (undo-tree-id269 . -393) (undo-tree-id271 . -453) (undo-tree-id273 . -475) (undo-tree-id275 . -476) (undo-tree-id277 . -541) (undo-tree-id279 . -589) (undo-tree-id281 . -648) (undo-tree-id283 . -657) (undo-tree-id285 . -670) (undo-tree-id287 . -690) 1347 (t 25912 56457 65327 534000)) ((657 . 1347)) (25912 56478 322823 773000) 0 nil])
([nil nil ((152 . 153)) ((#(" " 0 1 (fontified t face font-lock-comment-delimiter-face)) . 152)) (25912 56485 865535 289000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -656) (undo-tree-id214 . -1) (undo-tree-id215 . -1) (undo-tree-id216 . -1) (undo-tree-id217 . -1) (undo-tree-id218 . -1) (undo-tree-id219 . -1) (undo-tree-id220 . -1) (undo-tree-id221 . -1) (undo-tree-id223 . -1) (undo-tree-id225 . -1) (undo-tree-id227 . -1) (undo-tree-id229 . -1) (undo-tree-id231 . -1) (undo-tree-id233 . -1) 657) ((656 . 657)) (25912 56478 135146 968000) 0 nil])
([nil nil ((169 . 170)) ((#("#" 0 1 (fontified t face font-lock-comment-delimiter-face)) . 169) (undo-tree-id208 . -1) (undo-tree-id209 . -1)) (25912 56486 635 901000) 0 nil])
([nil nil ((656 . 657)) ((#("
" 0 1 (fontified t)) . 656) (t 25912 56469 41503 86000)) (25912 56469 42120 215000) -1 nil])
([nil nil ((170 . 238)) ((#("--------------------------------------------------------------------" 0 68 (fontified t face font-lock-comment-face)) . 170)) (25912 56486 190188 691000) 0 nil])
nil
([nil nil ((150 . 151)) ((#("-" 0 1 (fontified t face font-lock-comment-face)) . 150)) (25912 56486 370364 590000) 0 nil])
([nil nil ((239 . 240)) ((#("-" 0 1 (fontified t face font-lock-comment-face)) . 239) (undo-tree-id206 . -1) (undo-tree-id207 . -1)) (25912 56486 551379 383000) 0 nil])
([nil nil ((240 . 241)) ((#("
" 0 1 (fontified t face font-lock-comment-face)) . 240)) (25912 56486 749958 156000) 0 nil])
([nil nil ((240 . 243)) ((#("xxw" 0 1 (fontified t face font-lock-comment-face) 1 2 (fontified t face font-lock-comment-face) 2 3 (fontified t face font-lock-comment-face)) . 240)) (25912 56486 951208 395000) 0 nil])
([nil nil ((#("xxw" 0 1 (fontified t face font-lock-comment-face) 1 2 (fontified t face font-lock-comment-face) 2 3 (fontified t face font-lock-comment-face)) . 240)) ((240 . 243)) (25912 56487 141980 286000) 0 nil])
([nil nil ((#("#---------------------------------------------------------------------
# FpAdder section
" 0 1 (fontified t face font-lock-comment-delimiter-face) 1 69 (fontified t face font-lock-comment-face) 69 70 (fontified t face font-lock-comment-face) 70 71 (fontified t face font-lock-comment-face) 71 72 (fontified t face font-lock-comment-delimiter-face) 72 73 (fontified t face font-lock-comment-delimiter-face) 73 88 (fontified t face font-lock-comment-face) 88 89 (fontified t face font-lock-comment-face)) . 81) (undo-tree-id352 . -71) (undo-tree-id353 . -71) (undo-tree-id354 . -89) (undo-tree-id355 . -89)) ((81 . 170)) (25912 56487 385311 808000) 0 nil])
([nil nil ((81 . 170)) ((#("#---------------------------------------------------------------------
# FpAdder section
" 0 1 (fontified t face font-lock-comment-delimiter-face) 1 70 (fontified t face font-lock-comment-face) 70 71 (fontified t face font-lock-comment-face) 71 73 (fontified t face font-lock-comment-delimiter-face) 73 89 (fontified t face font-lock-comment-face)) . 81)) (25912 56487 533404 891000) 0 nil])
([nil nil ((779 . 780) (#(" " 0 1 (fontified nil)) . 778) (779 . 780)) ((#("
" 0 1 (fontified nil)) . 779) (undo-tree-id180 . -1) (undo-tree-id181 . -1) (undo-tree-id182 . -1) (undo-tree-id183 . -1) (undo-tree-id185 . -1) (undo-tree-id186 . -1) (undo-tree-id188 . -1) (undo-tree-id189 . -1) (undo-tree-id190 . -1) (undo-tree-id192 . -1) (778 . 779) (#("
" 0 1 (fontified t)) . 779) (undo-tree-id194 . -1) (undo-tree-id195 . -1) (undo-tree-id196 . -1) (undo-tree-id197 . -1) (undo-tree-id199 . -1) (undo-tree-id200 . -1) (undo-tree-id202 . -1) (undo-tree-id203 . -1) (undo-tree-id205 . -1)) (25912 56487 746402 775000) 0 nil])
([nil nil ((nil rear-nonsticky nil 938 . 939) (nil fontified nil 853 . 860) (nil fontified nil 850 . 851) (780 . 939)) ((#("#---------------------------------------------------------------------
# FpAdder section
#---------------------------------------------------------------------" 0 1 (fontified nil face font-lock-comment-delimiter-face) 1 67 (fontified nil face font-lock-comment-face) 67 68 (fontified nil face font-lock-comment-face) 68 70 (fontified nil face font-lock-comment-face) 70 71 (fontified nil face font-lock-comment-face) 71 73 (fontified nil face font-lock-comment-delimiter-face) 73 80 (fontified nil face font-lock-comment-face) 80 81 (fontified nil face font-lock-comment-face) 81 89 (fontified nil face font-lock-comment-face) 89 90 (fontified nil face font-lock-comment-delimiter-face) 90 109 (fontified nil face font-lock-comment-face) 109 120 (fontified nil face font-lock-comment-face) 120 158 (fontified nil face font-lock-comment-face) 158 159 (rear-nonsticky nil fontified nil face font-lock-comment-face)) . 780) (undo-tree-id169 . -73) (undo-tree-id170 . -159) (undo-tree-id171 . -159) (undo-tree-id173 . -34) (undo-tree-id174 . -159) (undo-tree-id176 . -159) (undo-tree-id177 . -159) (undo-tree-id179 . -159) (nil fontified t 850 . 851) (nil fontified t 853 . 860) (nil rear-nonsticky t 938 . 939)) (25912 56487 965399 520000) 0 nil])
([nil nil ((939 . 940)) ((#("
" 0 1 (fontified t face font-lock-comment-face)) . 939) (undo-tree-id162 . -1) (undo-tree-id163 . -1) (undo-tree-id165 . -1) (undo-tree-id167 . -1)) (25912 56488 198237 747000) 0 nil])
([nil nil ((#("FpAdder" 0 7 (fontified t face font-lock-comment-face)) . 853)) ((853 . 860)) (25912 56488 588569 205000) 0 nil])
([nil nil ((853 . 860)) ((#("Fast ov" 0 4 (fontified t face font-lock-comment-face) 4 5 (fontified t face font-lock-comment-face) 5 6 (fontified t face font-lock-comment-face) 6 7 (fontified t face font-lock-comment-face)) . 853) (undo-tree-id160 . -4) (undo-tree-id161 . -4)) (25912 56488 826058 205000) 0 nil])
([nil nil ((#(" ov" 0 1 (fontified t face font-lock-comment-face) 1 2 (fontified t face font-lock-comment-face) 2 3 (fontified t face font-lock-comment-face)) . 857)) ((857 . 860)) (25912 56489 378593 485000) 0 nil])
([nil nil ((857 . 859)) ((#(" O" 0 1 (fontified t face font-lock-comment-face) 1 2 (fontified t face font-lock-comment-face)) . 857) (undo-tree-id158 . -1) (undo-tree-id159 . -1)) (25912 56489 701886 918000) 0 nil])
([nil nil ((#("O" 0 1 (fontified t face font-lock-comment-face)) . 858)) ((858 . 859)) (25912 56489 909027 421000) 0 nil])
([nil nil ((858 . 866)) ((#("Inverse " 0 8 (fontified t face font-lock-comment-face)) . 858) (undo-tree-id156 . -8) (undo-tree-id157 . -8)) (25912 56490 133798 821000) 0 nil])
([nil nil ((866 . 867)) ((#("A" 0 1 (fontified t face font-lock-comment-face)) . 866)) (25912 56490 339820 101000) 0 nil])
([nil nil ((#("A" 0 1 (fontified t face font-lock-comment-face)) . 866)) ((866 . 867)) (25912 56490 526650 694000) 0 nil])
([nil nil ((866 . 868)) ((#("Sw" 0 1 (fontified t face font-lock-comment-face) 1 2 (fontified t face font-lock-comment-face)) . 866) (undo-tree-id154 . -1) (undo-tree-id155 . -1)) (25912 56490 825173 311000) 0 nil])
([nil nil ((#("w" 0 1 (fontified t face font-lock-comment-face)) . 867)) ((867 . 868)) (25912 56491 118489 974000) 0 nil])
([nil nil ((867 . 877)) ((#("quare ROot" 0 7 (fontified t face font-lock-comment-face) 7 8 (fontified t face font-lock-comment-face) 8 9 (fontified t face font-lock-comment-face) 9 10 (fontified t face font-lock-comment-face)) . 867) (undo-tree-id152 . -7) (undo-tree-id153 . -7)) (25912 56491 398554 223000) 0 nil])
([nil nil ((#("Oot" 0 1 (fontified t face font-lock-comment-face) 1 2 (fontified t face font-lock-comment-face) 2 3 (fontified t face font-lock-comment-face)) . 874)) ((874 . 877)) (25912 56491 889184 609000) 0 nil])
([nil nil ((874 . 877)) ((#("oot" 0 3 (fontified t face font-lock-comment-face)) . 874)) (25912 56492 551232 723000) 0 nil])
([nil nil ((957 . 959)) ((#("

" 0 1 (fontified t) 1 2 (fontified t)) . 957) (undo-tree-id145 . -2) (undo-tree-id146 . -2) (undo-tree-id148 . -2) (undo-tree-id149 . -2) (undo-tree-id151 . -2)) (25912 56492 940231 73000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1117 . 1118) (nil fontified nil 1032 . 1039) (nil fontified nil 1029 . 1030) (959 . 1118)) ((#("#---------------------------------------------------------------------
# FpAdder section
#---------------------------------------------------------------------" 0 1 (fontified nil face font-lock-comment-delimiter-face) 1 14 (fontified nil face font-lock-comment-face) 14 70 (fontified nil face font-lock-comment-face) 70 71 (fontified nil face font-lock-comment-face) 71 73 (fontified nil face font-lock-comment-delimiter-face) 73 80 (fontified nil face font-lock-comment-face) 80 81 (fontified nil face font-lock-comment-face) 81 88 (fontified nil face font-lock-comment-face) 88 89 (fontified nil face font-lock-comment-face) 89 90 (fontified nil face font-lock-comment-delimiter-face) 90 131 (fontified nil face font-lock-comment-face) 131 132 (fontified nil face font-lock-comment-face) 132 152 (face font-lock-comment-face fontified nil) 152 158 (face font-lock-comment-face fontified nil) 158 159 (rear-nonsticky nil face font-lock-comment-face fontified nil)) . 959) (undo-tree-id140 . -73) (undo-tree-id141 . -73) (undo-tree-id142 . -73) (undo-tree-id144 . -73) (nil fontified t 1029 . 1030) (nil fontified t 1032 . 1039) (nil rear-nonsticky t 1117 . 1118)) (25912 56493 647671 304000) 0 nil])
([nil nil ((#("FpAdder" 0 7 (fontified t face font-lock-comment-face)) . 1032)) ((1032 . 1039)) (25912 56497 907554 622000) 0 nil])
([nil nil ((1032 . 1041)) ((#("Universal" 0 9 (face font-lock-comment-face)) . 1032)) (25912 56500 655086 742000) 0 nil])
([nil nil ((957 . 972) (t 25912 56504 902133 893000)) nil (25912 56602 56850 382000) 0 nil] [nil nil ((347 . 348)) ((#("	" 0 1 (fontified t face makefile-space)) . 347)) (25912 56495 756293 372000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -969) (undo-tree-id363 . -1) (#("l" 0 1 (fontified t)) . -970) (undo-tree-id364 . -1) (#("t" 0 1 (fontified t)) . -971) (undo-tree-id365 . -1) 972) nil (25912 56602 56849 198000) 0 nil])
([nil nil ((#(":" 0 1 (fontified t)) . -30) (undo-tree-id129 . -1) 31) ((30 . 31)) (25912 56315 474846 477000) 0 nil] [nil nil ((#("	" 0 1 (fontified t face makefile-space)) . 347)) ((347 . 348)) (25912 56146 320424 322000) 0 nil])
([nil nil ((969 . 977)) nil (25912 56602 56846 181000) 0 nil])
([nil nil ((30 . 31)) ((#(":" 0 1 (fontified t)) . 30) (undo-tree-id130 . -1) (undo-tree-id131 . -1)) (25912 56314 753438 484000) 0 nil])
([nil nil ((593 . 594)) ((#("	" 0 1 (fontified t)) . 593)) (25912 56143 46762 278000) 0 nil])
([nil nil ((977 . 978)) nil (25912 56602 56845 599000) 0 nil])
nil
([nil nil ((#("	" 0 1 (fontified t)) . 593)) ((593 . 594)) (25912 56142 701802 542000) 0 nil])
([nil nil ((978 . 979)) nil (25912 56602 56844 937000) 0 nil])
([nil nil ((592 . 593)) ((#("
" 0 1 (fontified t)) . 592) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (undo-tree-id128 . -1)) (25912 56142 522625 565000) 0 nil])
([nil nil ((nil fontified t 606 . 610) (nil face (font-lock-variable-name-face) 606 . 610) (#("PRAC" 0 4 (fontified t face (font-lock-variable-name-face))) . -605) (609 . 614) (nil fontified t 559 . 563) (nil face (font-lock-variable-name-face) 559 . 563) (#("PRAC" 0 4 (fontified t face (font-lock-variable-name-face))) . -558) (562 . 567) (nil fontified nil 323 . 327) (nil face (font-lock-variable-name-face) 323 . 327) (#("PRAC" 0 4 (fontified nil face (font-lock-variable-name-face))) . -322) (326 . 331) (nil fontified t 306 . 310) (nil face (font-lock-variable-name-face) 306 . 310) (#("PRAC" 0 4 (fontified t face (font-lock-variable-name-face))) . -305) (309 . 314) (nil fontified nil 275 . 279) (nil face (font-lock-variable-name-face) 275 . 279) (#("PRAC" 0 4 (fontified nil face (font-lock-variable-name-face))) . -274) (278 . 283) (nil fontified t 258 . 262) (nil face (font-lock-variable-name-face) 258 . 262) (#("PRAC" 0 4 (fontified t face (font-lock-variable-name-face))) . -257) (261 . 266) (nil fontified t 52 . 56) (nil face (makefile-shell font-lock-variable-name-face) 52 . 56) (#("PRAC" 0 4 (fontified t face (makefile-shell font-lock-variable-name-face))) . -51) (55 . 60) (nil fontified t 2 . 6) (nil face font-lock-variable-name-face 2 . 6) (#("PRAC" 0 4 (fontified t face font-lock-variable-name-face)) . -1) (5 . 10) 1) nil (25912 56602 56842 675000) 0 nil])
([nil nil ((593 . 594)) ((#("	" 0 1 (fontified t face makefile-space)) . 593) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (undo-tree-id125 . -1)) (25912 56142 327236 605000) 0 nil])
([nil nil ((25 . 26)) nil (25912 56602 56837 360000) 0 nil])
([nil nil ((nil rear-nonsticky nil 635 . 636) (594 . 636)) ((#("LINES:=$(shell python3 ${PRAC}/linelength)" 0 5 (fontified nil face font-lock-variable-name-face) 5 9 (fontified nil) 9 14 (fontified nil face (font-lock-function-name-face font-lock-variable-name-face)) 14 15 (fontified nil face (font-lock-function-name-face)) 15 25 (fontified nil face (makefile-shell)) 25 29 (fontified nil face (makefile-shell font-lock-variable-name-face)) 29 41 (fontified nil face (makefile-shell)) 41 42 (rear-nonsticky nil fontified nil)) . 594) (undo-tree-id122 . -42) (nil rear-nonsticky t 635 . 636)) (25912 56141 699822 920000) 0 nil])
([nil nil ((26 . 32)) nil (25912 56602 56836 543000) 0 nil])
([nil nil ((25 . 27) (t 25912 56030 398247 855000)) ((#("##" 0 1 (fontified t face font-lock-comment-delimiter-face) 1 2 (fontified t syntax-table (3) face font-lock-comment-delimiter-face)) . 25)) (25912 56125 924973 499000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -31) (undo-tree-id362 . -1) 32) nil (25912 56602 56835 706000) 0 nil])
([nil nil ((#("LINES:=$(shell python3 ${PRAC}/linelength)" 0 5 (fontified t face font-lock-variable-name-face) 5 9 (fontified t) 9 14 (fontified t face (font-lock-function-name-face font-lock-variable-name-face)) 14 15 (fontified t face (font-lock-function-name-face)) 15 25 (fontified t face (makefile-shell)) 25 29 (fontified t face (makefile-shell font-lock-variable-name-face)) 29 41 (fontified t face (makefile-shell)) 41 42 (rear-nonsticky t fontified t)) . 596) (undo-tree-id15 . -42) (undo-tree-id16 . -42) (undo-tree-id17 . -42) 638 (t 25912 56036 321478 3000)) ((596 . 638)) (25912 56125 897307 891000) 0 nil])
([nil nil ((31 . 33)) nil (25912 56602 56834 272000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -594) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (#("	" 0 1 (fontified t face makefile-space)) . -595) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) 596) ((594 . 596)) (25912 56125 863504 798000) 0 nil])
([nil nil ((32 . 35)) nil (25912 56602 56833 647000) 0 nil])
([nil nil ((474 . 475)) ((#("
" 0 1 (fontified t)) . 474) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1)) (25912 56125 832987 164000) 0 nil])
([nil nil ((34 . 37)) nil (25912 56602 56832 826000) 0 nil])
([nil nil ((475 . 476)) ((#("	" 0 1 (fontified t face makefile-space)) . 475) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1)) (25912 56125 802782 941000) 0 nil])
([nil nil ((#("O" 0 1 (fontified t face (font-lock-variable-name-face))) . -35) (undo-tree-id356 . -1) (undo-tree-id357 . -1) (undo-tree-id358 . -1) (undo-tree-id359 . -1) (#("R" 0 1 (fontified t face (font-lock-variable-name-face))) . -36) (undo-tree-id360 . -1) (undo-tree-id361 . -1) 37) nil (25912 56602 56831 196000) 0 nil])
([nil nil ((nil fontified nil 517 . 518) (nil fontified nil 505 . 517) (nil fontified nil 501 . 505) (nil fontified nil 491 . 501) (nil fontified nil 490 . 491) (nil fontified nil 485 . 490) (nil fontified nil 481 . 485) (nil fontified nil 476 . 481) (476 . 518)) ((#("LINES:=$(shell python3 ${PRAC}/linelength)" 0 5 (fontified nil face font-lock-variable-name-face) 5 9 (fontified nil) 9 14 (fontified nil face (font-lock-function-name-face font-lock-variable-name-face)) 14 15 (fontified nil face (font-lock-function-name-face)) 15 25 (fontified nil face (makefile-shell)) 25 29 (fontified nil face (makefile-shell font-lock-variable-name-face)) 29 41 (fontified nil face (makefile-shell)) 41 42 (rear-nonsticky t fontified nil)) . 476) (undo-tree-id40 . -42) (undo-tree-id41 . -42) (undo-tree-id42 . -42) (nil fontified t 517 . 518) (t 25912 56091 711374 977000)) (25912 56125 777581 239000) 0 nil])
([nil nil ((35 . 39)) nil (25912 56602 56819 465000) 0 nil])
([nil nil ((#("LINES:=$(shell python3 ${PRAC}/linelength)" 0 5 (fontified t face font-lock-variable-name-face) 5 9 (fontified t) 9 14 (fontified t face (font-lock-function-name-face font-lock-variable-name-face)) 14 15 (fontified t face (font-lock-function-name-face)) 15 25 (fontified t face (makefile-shell)) 25 29 (fontified t face (makefile-shell font-lock-variable-name-face)) 29 41 (fontified t face (makefile-shell)) 41 42 (rear-nonsticky t fontified t)) . 476) (undo-tree-id6 . -42) (undo-tree-id7 . -42) (undo-tree-id8 . -42) 518 (t 25912 56091 711374 977000)) ((476 . 518)) (25912 56125 277076 567000) 0 nil])
([nil nil ((40 . 46)) nil (25912 56602 56815 984000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -474) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (#("	" 0 1 (fontified t face makefile-space)) . -475) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) 476) ((474 . 476)) (25912 56124 770350 188000) 0 nil])
([nil nil ((#("/FpAdd" 0 6 (fontified t)) . -19) (undo-tree-id370 . -6) (undo-tree-id371 . -6) 25 (t 25912 56602 56501 832000)) nil (25912 56628 652184 797000) 0 nil])
nil
([nil nil ((19 . 22)) nil (25912 56628 652181 902000) 0 nil])
([nil nil ((#("y" 0 1 (fontified t)) . -19) (undo-tree-id366 . -1) (undo-tree-id367 . -1) (#("y" 0 1 (fontified t)) . -20) (undo-tree-id368 . -1) (#("y" 0 1 (fontified t)) . -21) (undo-tree-id369 . -1) 22) nil (25912 56628 652178 450000) 0 nil])
([nil nil ((nil fontified t 621 . 626) (nil face (font-lock-variable-name-face) 621 . 626) (#("PROTO" 0 5 (fontified t face (font-lock-variable-name-face))) . -621) (626 . 631) (nil fontified t 574 . 579) (nil face (font-lock-variable-name-face) 574 . 579) (#("PROTO" 0 5 (fontified t face (font-lock-variable-name-face))) . -574) (579 . 584) (nil fontified nil 338 . 343) (nil face (font-lock-variable-name-face) 338 . 343) (#("PROTO" 0 5 (fontified nil face (font-lock-variable-name-face))) . -338) (343 . 348) (nil fontified t 321 . 326) (nil face (font-lock-variable-name-face) 321 . 326) (#("PROTO" 0 5 (fontified t face (font-lock-variable-name-face))) . -321) (326 . 331) (nil fontified nil 290 . 295) (nil face (font-lock-variable-name-face) 290 . 295) (#("PROTO" 0 5 (fontified nil face (font-lock-variable-name-face))) . -290) (295 . 300) (nil fontified t 273 . 278) (t 25912 56628 657286 432000) (nil face (font-lock-variable-name-face) 273 . 278) (t 25912 56628 657286 432000) (#("PROTO" 0 5 (fontified t face (font-lock-variable-name-face))) . -273) (t 25912 56628 657286 432000) (278 . 283) 259 (t 25912 56628 657286 432000)) nil (25912 56736 957153 524000) 0 nil])
([nil nil ((#("P" 0 1 (fontified t face (makefile-shell font-lock-variable-name-face))) . -67) (undo-tree-id372 . -1) (undo-tree-id373 . -1) (#("R" 0 1 (fontified t face (makefile-shell font-lock-variable-name-face))) . -68) (undo-tree-id374 . -1) (undo-tree-id375 . -1) (#("O" 0 1 (fontified t face (makefile-shell font-lock-variable-name-face))) . -69) (undo-tree-id376 . -1) (undo-tree-id377 . -1) (#("T" 0 1 (fontified t face (makefile-shell font-lock-variable-name-face))) . -70) (undo-tree-id378 . -1) (undo-tree-id379 . -1) (#("O" 0 1 (fontified t face (makefile-shell font-lock-variable-name-face))) . -71) (undo-tree-id380 . -1) (undo-tree-id381 . -1) 72) nil (25912 56736 957147 14000) 0 nil])
([nil nil ((67 . 72)) nil (25912 56736 957130 999000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -40) (undo-tree-id382 . -1) (undo-tree-id383 . -1) (undo-tree-id384 . -1) (undo-tree-id385 . -1) (undo-tree-id386 . -1) (undo-tree-id387 . -1) 41 (t 25912 56736 960927 973000)) nil (25912 56911 271544 466000) 0 nil])
([nil nil ((40 . 41) (t 25912 56911 271815 403000)) nil (25912 56961 928998 823000) 0 nil])
([nil nil ((41 . 48)) nil (25912 56961 928998 54000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -46) (undo-tree-id393 . -1) (#("=" 0 1 (fontified t)) . -47) (undo-tree-id394 . -1) 48) nil (25912 56961 928997 61000) 0 nil])
([nil nil ((46 . 47)) nil (25912 56961 928994 644000) 0 nil])
([nil nil ((nil rear-nonsticky nil 60 . 61) (nil fontified nil 54 . 61) (nil fontified nil 49 . 54) (nil fontified nil 47 . 49) (47 . 61)) nil (25912 56961 928993 776000) 0 nil])
([nil nil ((#("F" 0 1 (fontified t)) . -56) (undo-tree-id388 . -1) (#("p" 0 1 (fontified t)) . -57) (undo-tree-id389 . -1) (#("A" 0 1 (fontified t)) . -58) (undo-tree-id390 . -1) (#("d" 0 1 (fontified t)) . -59) (undo-tree-id391 . -1) (#("d" 0 1 (fontified t rear-nonsticky t)) . -60) (undo-tree-id392 . -1) 61) nil (25912 56961 928990 891000) 0 nil])
([nil nil ((56 . 66)) nil (25912 56961 928976 708000) 0 nil])
([nil nil ((1028 . 1033) (t 25912 56961 929969 659000)) nil (25912 56987 991738 234000) 0 nil])
([nil nil ((1032 . 1037)) nil (25912 56987 991737 392000) 0 nil])
([nil nil ((1038 . 1047)) nil (25912 56987 991736 595000) 0 nil])
([nil nil ((#("/" 0 1 (fontified t)) . -1046) (undo-tree-id395 . -1) (undo-tree-id396 . -1) 1047) nil (25912 56987 991734 972000) 0 nil])
([nil nil ((1046 . 1049)) nil (25912 56987 991722 936000) 0 nil])
([nil nil ((1050 . 1051) (t 25912 56987 991096 897000)) nil (25912 57084 104310 103000) 0 nil])
([nil nil ((#("	" 0 1 (fontified t face makefile-space)) . -1050) (undo-tree-id397 . -1) 1051) nil (25912 57084 104307 950000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1222 . 1223) (nil fontified nil 1050 . 1223) (1050 . 1223)) nil (25912 57084 104295 563000) 0 nil])
([nil nil ((1049 . 1050)) nil (25912 57084 104293 585000) 0 nil])
([nil nil ((1050 . 1060)) nil (25912 57084 104291 277000) 0 nil])
([nil nil ((#("../prototype/automation" 0 23 (fontified nil)) . -1145) (1168 . 1176) (#("../prototype/automation" 0 23 (fontified nil)) . -1123) (1146 . 1154) (#("../prototype/automation" 0 23 (fontified nil)) . -1098) (1121 . 1129) (#("../prototype/automation" 0 23 (fontified t)) . -1070) (1093 . 1101) 1061) nil (25912 57084 104283 498000) 0 nil])
([nil nil ((1061 . 1062) (t 25912 57084 107343 585000)) nil (25912 57116 532453 66000) 0 nil])
([nil nil ((1060 . 1061)) nil (25912 57116 532452 271000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1087 . 1088) (nil fontified nil 1069 . 1088) (nil fontified nil 1068 . 1069) (nil fontified nil 1063 . 1068) (nil fontified nil 1061 . 1063) (1061 . 1088)) nil (25912 57116 532451 449000) 0 nil])
([nil nil ((1088 . 1089)) nil (25912 57116 532450 123000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1112 . 1113) (nil fontified nil 1097 . 1113) (nil fontified nil 1096 . 1097) (nil fontified nil 1091 . 1096) (nil fontified nil 1089 . 1091) (1089 . 1113)) nil (25912 57116 532449 199000) 0 nil])
([nil nil ((1113 . 1114)) nil (25912 57116 532447 737000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1134 . 1135) (nil fontified nil 1122 . 1135) (nil fontified nil 1121 . 1122) (nil fontified nil 1116 . 1121) (nil fontified nil 1114 . 1116) (1114 . 1135)) nil (25912 57116 532446 819000) 0 nil])
([nil nil ((1135 . 1136)) nil (25912 57116 532444 965000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1151 . 1152) (nil fontified nil 1144 . 1152) (nil fontified nil 1143 . 1144) (nil fontified nil 1138 . 1143) (nil fontified nil 1136 . 1138) (1136 . 1152)) nil (25912 57116 532441 26000) 0 nil])
([nil nil ((1026 . 1027) (t 25912 57116 536802 339000)) nil (25912 57126 507209 199000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1047 . 1048) (nil fontified nil 1036 . 1048) (nil fontified nil 1031 . 1036) (nil fontified nil 1027 . 1031) (1027 . 1048)) nil (25912 57126 507205 370000) 0 nil])
([nil nil ((1289 . 1290) (t 25912 57126 513253 285000)) nil (25912 57172 672530 534000) 0 nil])
([nil nil ((1290 . 1308)) nil (25912 57172 672529 548000) 0 nil])
([nil nil ((1308 . 1309)) nil (25912 57172 672528 849000) 0 nil])
([nil nil ((1309 . 1310)) nil (25912 57172 672528 139000) 0 nil])
([nil nil ((1310 . 1314)) nil (25912 57172 672527 356000) 0 nil])
([nil nil ((#("d" 0 1 (fontified t)) . -1312) (undo-tree-id398 . -1) (undo-tree-id399 . -1) (undo-tree-id400 . -1) (undo-tree-id401 . -1) (#("i" 0 1 (fontified t)) . -1313) (undo-tree-id402 . -1) (undo-tree-id403 . -1) 1314) nil (25912 57172 672525 155000) 0 nil])
([nil nil ((1312 . 1321)) nil (25912 57172 672510 502000) 0 nil])
([nil nil ((1321 . 1322) (t 25912 57172 671351 617000)) nil (25912 57252 369363 410000) 0 nil])
([nil nil ((1322 . 1335)) nil (25912 57252 369362 649000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -1332) (undo-tree-id436 . -1) (#("l" 0 1 (fontified t)) . -1333) (undo-tree-id437 . -1) (#("s" 0 1 (fontified t)) . -1334) (undo-tree-id438 . -1) 1335) nil (25912 57252 369361 707000) 0 nil])
([nil nil ((1332 . 1337)) nil (25912 57252 369359 48000) 0 nil])
([nil nil ((#(":" 0 1 (fontified t)) . -1336) (undo-tree-id435 . -1) 1337) nil (25912 57252 369358 353000) 0 nil])
([nil nil ((1336 . 1341)) nil (25912 57252 369357 59000) 0 nil])
([nil nil ((1341 . 1342)) nil (25912 57252 369356 505000) 0 nil])
([nil nil ((1342 . 1343)) nil (25912 57252 369355 939000) 0 nil])
([nil nil ((1343 . 1358)) nil (25912 57252 369355 414000) 0 nil])
([nil nil ((1358 . 1363)) nil (25912 57252 369354 845000) 0 nil])
([nil nil ((#("/" 0 1 (fontified t)) . -1361) (undo-tree-id433 . -1) (#("p" 0 1 (fontified t)) . -1362) (undo-tree-id434 . -1) 1363) nil (25912 57252 369354 2000) 0 nil])
([nil nil ((1361 . 1364)) nil (25912 57252 369352 12000) 0 nil])
([nil nil ((1364 . 1365)) nil (25912 57252 369351 445000) 0 nil])
([nil nil ((1365 . 1366)) nil (25912 57252 369350 867000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -1364) (undo-tree-id429 . -1) (undo-tree-id430 . -1) (undo-tree-id431 . -1) (#("	" 0 1 (fontified t face makefile-space)) . -1365) (undo-tree-id432 . -1) 1366) nil (25912 57252 369349 969000) 0 nil])
([nil nil ((1364 . 1365)) nil (25912 57252 369346 932000) 0 nil])
([nil nil ((1365 . 1368)) nil (25912 57252 369346 318000) 0 nil])
([nil nil ((#("f" 0 1 (fontified t)) . -1365) (undo-tree-id426 . -1) (#("i" 0 1 (fontified t)) . -1366) (undo-tree-id427 . -1) (#("n" 0 1 (fontified t)) . -1367) (undo-tree-id428 . -1) 1368) nil (25912 57252 369345 319000) 0 nil])
([nil nil ((1365 . 1376)) nil (25912 57252 369342 610000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -1374) (undo-tree-id424 . -1) (#("l" 0 1 (fontified t)) . -1375) (undo-tree-id425 . -1) 1376) nil (25912 57252 369341 712000) 0 nil])
([nil nil ((1374 . 1377)) nil (25912 57252 369335 91000) 0 nil])
([nil nil ((#("f" 0 1 (fontified t)) . -1365) (undo-tree-id412 . -1) (#("i" 0 1 (fontified t)) . -1366) (undo-tree-id413 . -1) (#("n" 0 1 (fontified t)) . -1367) (undo-tree-id414 . -1) (#("a" 0 1 (fontified t)) . -1368) (undo-tree-id415 . -1) (#("l" 0 1 (fontified t)) . -1369) (undo-tree-id416 . -1) (#("_" 0 1 (fontified t)) . -1370) (undo-tree-id417 . -1) (#("r" 0 1 (fontified t)) . -1371) (undo-tree-id418 . -1) (#("e" 0 1 (fontified t)) . -1372) (undo-tree-id419 . -1) (#("s" 0 1 (fontified t)) . -1373) (undo-tree-id420 . -1) (#("u" 0 1 (fontified t)) . -1374) (undo-tree-id421 . -1) (#("l" 0 1 (fontified t)) . -1375) (undo-tree-id422 . -1) (#("t" 0 1 (fontified t)) . -1376) (undo-tree-id423 . -1) 1377) nil (25912 57252 369333 134000) 0 nil])
([nil nil ((1365 . 1377)) nil (25912 57252 369317 540000) 0 nil])
([nil nil ((#(":" 0 1 (fontified t)) . -1376) (undo-tree-id411 . -1) 1377) nil (25912 57252 369316 765000) 0 nil])
([nil nil ((1376 . 1381)) nil (25912 57252 369315 394000) 0 nil])
([nil nil ((1381 . 1382)) nil (25912 57252 369314 828000) 0 nil])
([nil nil ((1382 . 1383)) nil (25912 57252 369314 153000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1400 . 1401) (nil fontified nil 1392 . 1401) (nil fontified nil 1387 . 1392) (nil fontified nil 1383 . 1387) (1383 . 1401)) nil (25912 57252 369313 247000) 0 nil])
([nil nil ((#("b" 0 1 (fontified t)) . -1394) (undo-tree-id404 . -1) (#("i" 0 1 (fontified t)) . -1395) (undo-tree-id405 . -1) (#("n" 0 1 (fontified t)) . -1396) (undo-tree-id406 . -1) (#("_" 0 1 (fontified t)) . -1397) (undo-tree-id407 . -1) (#("d" 0 1 (fontified t)) . -1398) (undo-tree-id408 . -1) (#("e" 0 1 (fontified t)) . -1399) (undo-tree-id409 . -1) (#("c" 0 1 (fontified t rear-nonsticky t)) . -1400) (undo-tree-id410 . -1) 1401) nil (25912 57252 369310 432000) 0 nil])
([nil nil ((1394 . 1398)) nil (25912 57252 369294 805000) 0 nil])
([nil nil ((1308 . 1309) (t 25912 57252 367013 376000)) nil (25912 57279 226321 943000) 0 nil])
([nil nil ((nil fontified nil 1317 . 1318) (nil fontified nil 1309 . 1317) (1309 . 1318)) nil (25912 57279 226321 3000) 0 nil])
([nil nil ((1351 . 1352)) nil (25912 57279 226319 561000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1372 . 1373) (nil fontified nil 1361 . 1373) (nil fontified nil 1356 . 1361) (nil fontified nil 1352 . 1356) (1352 . 1373)) nil (25912 57279 226318 602000) 0 nil])
([nil nil ((1413 . 1414)) nil (25912 57279 226316 922000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1428 . 1429) (nil fontified nil 1423 . 1429) (nil fontified nil 1418 . 1423) (nil fontified nil 1414 . 1418) (1414 . 1429)) nil (25912 57279 226313 724000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -1027) (undo-tree-id439 . -1) (undo-tree-id440 . -1) (undo-tree-id441 . -1) (#("/" 0 1 (fontified t)) . -1028) (undo-tree-id442 . -1) (undo-tree-id443 . -1) 1029 (t 25912 57279 228256 629000)) nil (25912 57346 800648 175000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -1350) (undo-tree-id444 . -1) (undo-tree-id445 . -1) (#("/" 0 1 (fontified t)) . -1351) (undo-tree-id446 . -1) 1352 (t 25912 57346 803400 391000)) nil (25912 57351 681042 303000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -1410) (undo-tree-id447 . -1) (undo-tree-id448 . -1) (undo-tree-id449 . -1) (undo-tree-id450 . -1) (undo-tree-id451 . -1) (undo-tree-id452 . -1) (#("/" 0 1 (fontified t)) . -1411) (undo-tree-id453 . -1) (undo-tree-id454 . -1) (undo-tree-id455 . -1) (undo-tree-id456 . -1) (undo-tree-id457 . -1) 1412 (t 25912 57351 683628 214000)) nil (25912 57381 23460 601000) 0 nil])
([nil nil ((1423 . 1424) (t 25912 57381 24999 893000)) nil (25912 57431 295660 864000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1442 . 1443) (nil fontified nil 1424 . 1443) (1424 . 1443)) nil (25912 57431 295659 736000) 0 nil])
([nil nil ((1443 . 1444)) nil (25912 57431 295658 190000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1461 . 1462) (nil fontified nil 1444 . 1462) (1444 . 1462)) nil (25912 57431 295654 895000) 0 nil])
([nil nil ((1369 . 1370) (t 25912 57431 299357 111000)) nil (25912 57446 947779 405000) 0 nil])
([nil nil ((1370 . 1385)) nil (25912 57446 947778 580000) 0 nil])
([nil nil ((#("/" 0 1 (fontified t)) . -1383) (undo-tree-id466 . -1) (#("t" 0 1 (fontified t)) . -1384) (undo-tree-id467 . -1) 1385) nil (25912 57446 947777 645000) 0 nil])
([nil nil ((1383 . 1384)) nil (25912 57446 947774 894000) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . -1383) (undo-tree-id464 . -1) (undo-tree-id465 . -1) 1384) nil (25912 57446 947774 6000) 0 nil])
([nil nil ((1383 . 1386)) nil (25912 57446 947771 578000) 0 nil])
([nil nil ((#("x" 0 1 (fontified t)) . -1384) (undo-tree-id458 . -1) (undo-tree-id459 . -1) (undo-tree-id460 . -1) (undo-tree-id461 . -1) (#("t" 0 1 (fontified t)) . -1385) (undo-tree-id462 . -1) (undo-tree-id463 . -1) 1386) nil (25912 57446 947769 559000) 0 nil])
([nil nil ((1384 . 1387)) nil (25912 57446 947755 543000) 0 nil])
([nil nil ((1046 . 1051) (t 25912 57446 948092 415000)) nil (25912 57491 562308 654000) 0 nil])
([nil nil ((#("o" 0 1 (fontified t)) . -1050) (undo-tree-id494 . -1) 1051) nil (25912 57491 562307 671000) 0 nil])
([nil nil ((1050 . 1054)) nil (25912 57491 562306 320000) 0 nil])
([nil nil ((#("d" 0 1 (fontified t)) . -1047) (undo-tree-id487 . -1) (#("e" 0 1 (fontified t)) . -1048) (undo-tree-id488 . -1) (#("c" 0 1 (fontified t)) . -1049) (undo-tree-id489 . -1) (#("i" 0 1 (fontified t)) . -1050) (undo-tree-id490 . -1) (#("n" 0 1 (fontified t)) . -1051) (undo-tree-id491 . -1) (#("a" 0 1 (fontified t)) . -1052) (undo-tree-id492 . -1) (#("l" 0 1 (fontified t)) . -1053) (undo-tree-id493 . -1) 1054) nil (25912 57491 562304 956000) 0 nil])
([nil nil ((1047 . 1050)) nil (25912 57491 562298 278000) 0 nil])
([nil nil ((#("f" 0 1 (fontified t)) . -1047) (undo-tree-id484 . -1) (#("i" 0 1 (fontified t)) . -1048) (undo-tree-id485 . -1) (#("s" 0 1 (fontified t)) . -1049) (undo-tree-id486 . -1) 1050) nil (25912 57491 562297 189000) 0 nil])
([nil nil ((1047 . 1050)) nil (25912 57491 562294 378000) 0 nil])
([nil nil ((1049 . 1053)) nil (25912 57491 562293 726000) 0 nil])
([nil nil ((1054 . 1055)) nil (25912 57491 562293 111000) 0 nil])
([nil nil ((1055 . 1059)) nil (25912 57491 562292 431000) 0 nil])
([nil nil ((#("d" 0 1 (fontified t)) . -1055) (undo-tree-id480 . -1) (#("i" 0 1 (fontified t)) . -1056) (undo-tree-id481 . -1) (#("s" 0 1 (fontified t)) . -1057) (undo-tree-id482 . -1) (#("q" 0 1 (fontified t)) . -1058) (undo-tree-id483 . -1) 1059) nil (25912 57491 562290 772000) 0 nil])
([nil nil ((1055 . 1071)) nil (25912 57491 562286 375000) 0 nil])
([nil nil ((#("/" 0 1 (fontified t)) . -1068) (undo-tree-id468 . -1) (undo-tree-id469 . -1) (undo-tree-id470 . -1) (undo-tree-id471 . -1) (undo-tree-id472 . -1) (undo-tree-id473 . -1) (#("t" 0 1 (fontified t)) . -1069) (undo-tree-id474 . -1) (undo-tree-id475 . -1) (undo-tree-id476 . -1) (undo-tree-id477 . -1) (#("x" 0 1 (fontified t)) . -1070) (undo-tree-id478 . -1) (undo-tree-id479 . -1) 1071) nil (25912 57491 562283 953000) 0 nil])
([nil nil ((1068 . 1072)) nil (25912 57491 562264 86000) 0 nil])
([nil nil ((1005 . 1006) (t 25912 57491 562192 308000)) nil (25912 57539 481049 242000) 0 nil])
([nil nil ((1686 . 1687)) nil (25912 57539 481045 359000) 0 nil])
([nil nil ((1524 . 1525) (t 25912 57539 480452 842000)) nil (25912 57546 218531 477000) 0 nil])
([nil nil ((1525 . 1526)) nil (25912 57546 218529 882000) 0 nil])
([nil current ((#("x" 0 1 (fontified t)) . -1525) (undo-tree-id495 . -1) 1526) nil (25912 57546 218526 891000) 0 nil])
nil
