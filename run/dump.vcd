$date
	Sun Oct 22 19:08:56 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module FpAdd_tb $end
$var wire 27 ! tst_out [26:0] $end
$var reg 32 " fh [31:0] $end
$var reg 32 # file_result [31:0] $end
$var reg 1 $ tst_clk $end
$var reg 27 % tst_in1 [26:0] $end
$var reg 27 & tst_in2 [26:0] $end
$var reg 1 ' tst_rst $end
$var integer 32 ( count [31:0] $end
$var integer 32 ) total [31:0] $end
$scope module dut $end
$var wire 1 $ clk $end
$var wire 27 * in1 [26:0] $end
$var wire 27 + in2 [26:0] $end
$var wire 1 ' rst $end
$var wire 1 , sub $end
$var wire 8 - small_shift [25:18] $end
$var wire 19 . sm_mant [18:0] $end
$var wire 19 / gr_mant [18:0] $end
$var wire 18 0 final_add [17:0] $end
$var reg 20 1 add_out [19:0] $end
$var reg 27 2 add_result [26:0] $end
$var reg 8 3 expt_carry [25:18] $end
$var reg 18 4 final_sub [17:0] $end
$var reg 27 5 gr [26:0] $end
$var reg 27 6 greater [26:0] $end
$var reg 8 7 net_expt [25:18] $end
$var reg 19 8 net_small [18:0] $end
$var reg 20 9 sm [19:0] $end
$var reg 8 : sm_shift [25:18] $end
$var reg 27 ; smaller [26:0] $end
$var reg 8 < sub_expt [7:0] $end
$var reg 19 = sub_out [18:0] $end
$var reg 27 > sub_result [26:0] $end
$var reg 5 ? sub_shift [4:0] $end
$var reg 27 @ sum [26:0] $end
$var reg 19 A temp_sub [18:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b1000000000000000000 A
b0 @
b0 ?
b0 >
b1000000000000000000 =
b0 <
bx ;
b0 :
b0 9
bx 8
b0 7
bx 6
b0 5
b0 4
b0 3
b0 2
b1000000000000000000 1
b0 0
b1000000000000000000 /
b0 .
bx -
0,
bx +
bx *
b10 )
b0 (
0'
bx &
bx %
1$
b0 #
b10000000000000000000000000000011 "
b0 !
$end
#5
0$
#10
1$
#15
0$
#20
1$
#25
0$
#30
1$
#35
0$
#40
1'
1$
#45
0$
#50
bx 4
b1001000000000000000 8
bx A
bx !
bx @
bx 0
b0 -
bx <
bx 3
bx >
bx 1
bx =
bx 2
b110000010001000000000000000 ;
b10000010010000000000000000 6
x,
bx .
b1xxxxxxxxxxxxxxxxxx /
bx :
bx 7
bx 9
bx 5
b1 (
b110000010001000000000000000 &
b110000010001000000000000000 +
b10000010010000000000000000 %
b10000010010000000000000000 *
1$
#55
0$
#60
b0 4
b1000000000000000000 A
b11 ?
b10000011 3
b1111111000000000000000000 !
b1111111000000000000000000 @
b0 8
b1100000000000000 0
bx -
b1111111 <
b1111111000000000000000000 >
b1000000000000000 =
b10011000000000000000 1
b10000011001100000000000000 2
bx ;
bx 6
1,
b1001000000000000000 .
b1010000000000000000 /
b0 :
b10000010 7
b11001000000000000000 9
b10000010010000000000000000 5
b10 (
bx &
bx +
bx %
bx *
1$
#65
0$
#70
bx 4
bx A
b0 ?
bx 0
bx !
bx @
bx <
bx 3
bx >
bx 1
bx =
bx 2
x,
b0 .
b1xxxxxxxxxxxxxxxxxx /
bx :
bx 7
bx0000000000000000000 9
bx 5
b11 (
1$
